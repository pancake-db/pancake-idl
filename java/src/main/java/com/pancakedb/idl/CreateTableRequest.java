// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ddl.proto

package com.pancakedb.idl;

/**
 * Protobuf type {@code protos.ddl.CreateTableRequest}
 */
public final class CreateTableRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protos.ddl.CreateTableRequest)
    CreateTableRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreateTableRequest.newBuilder() to construct.
  private CreateTableRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreateTableRequest() {
    tableName_ = "";
    mode_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CreateTableRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CreateTableRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            tableName_ = s;
            break;
          }
          case 18: {
            com.pancakedb.idl.Schema.Builder subBuilder = null;
            if (schema_ != null) {
              subBuilder = schema_.toBuilder();
            }
            schema_ = input.readMessage(com.pancakedb.idl.Schema.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(schema_);
              schema_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            mode_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.pancakedb.idl.Ddl.internal_static_protos_ddl_CreateTableRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.pancakedb.idl.Ddl.internal_static_protos_ddl_CreateTableRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.pancakedb.idl.CreateTableRequest.class, com.pancakedb.idl.CreateTableRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code protos.ddl.CreateTableRequest.SchemaMode}
   */
  public enum SchemaMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FAIL_IF_EXISTS = 0;</code>
     */
    FAIL_IF_EXISTS(0),
    /**
     * <code>OK_IF_EXACT = 1;</code>
     */
    OK_IF_EXACT(1),
    /**
     * <code>ADD_NEW_COLUMNS = 2;</code>
     */
    ADD_NEW_COLUMNS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>FAIL_IF_EXISTS = 0;</code>
     */
    public static final int FAIL_IF_EXISTS_VALUE = 0;
    /**
     * <code>OK_IF_EXACT = 1;</code>
     */
    public static final int OK_IF_EXACT_VALUE = 1;
    /**
     * <code>ADD_NEW_COLUMNS = 2;</code>
     */
    public static final int ADD_NEW_COLUMNS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SchemaMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SchemaMode forNumber(int value) {
      switch (value) {
        case 0: return FAIL_IF_EXISTS;
        case 1: return OK_IF_EXACT;
        case 2: return ADD_NEW_COLUMNS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SchemaMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SchemaMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SchemaMode>() {
            public SchemaMode findValueByNumber(int number) {
              return SchemaMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.pancakedb.idl.CreateTableRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final SchemaMode[] VALUES = values();

    public static SchemaMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SchemaMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protos.ddl.CreateTableRequest.SchemaMode)
  }

  public static final int TABLE_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object tableName_;
  /**
   * <code>string table_name = 1;</code>
   * @return The tableName.
   */
  @java.lang.Override
  public java.lang.String getTableName() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tableName_ = s;
      return s;
    }
  }
  /**
   * <code>string table_name = 1;</code>
   * @return The bytes for tableName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTableNameBytes() {
    java.lang.Object ref = tableName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tableName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEMA_FIELD_NUMBER = 2;
  private com.pancakedb.idl.Schema schema_;
  /**
   * <code>.protos.schema.Schema schema = 2;</code>
   * @return Whether the schema field is set.
   */
  @java.lang.Override
  public boolean hasSchema() {
    return schema_ != null;
  }
  /**
   * <code>.protos.schema.Schema schema = 2;</code>
   * @return The schema.
   */
  @java.lang.Override
  public com.pancakedb.idl.Schema getSchema() {
    return schema_ == null ? com.pancakedb.idl.Schema.getDefaultInstance() : schema_;
  }
  /**
   * <code>.protos.schema.Schema schema = 2;</code>
   */
  @java.lang.Override
  public com.pancakedb.idl.SchemaOrBuilder getSchemaOrBuilder() {
    return getSchema();
  }

  public static final int MODE_FIELD_NUMBER = 3;
  private int mode_;
  /**
   * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
   * @return The enum numeric value on the wire for mode.
   */
  @java.lang.Override public int getModeValue() {
    return mode_;
  }
  /**
   * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
   * @return The mode.
   */
  @java.lang.Override public com.pancakedb.idl.CreateTableRequest.SchemaMode getMode() {
    @SuppressWarnings("deprecation")
    com.pancakedb.idl.CreateTableRequest.SchemaMode result = com.pancakedb.idl.CreateTableRequest.SchemaMode.valueOf(mode_);
    return result == null ? com.pancakedb.idl.CreateTableRequest.SchemaMode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getTableNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableName_);
    }
    if (schema_ != null) {
      output.writeMessage(2, getSchema());
    }
    if (mode_ != com.pancakedb.idl.CreateTableRequest.SchemaMode.FAIL_IF_EXISTS.getNumber()) {
      output.writeEnum(3, mode_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTableNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableName_);
    }
    if (schema_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSchema());
    }
    if (mode_ != com.pancakedb.idl.CreateTableRequest.SchemaMode.FAIL_IF_EXISTS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, mode_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.pancakedb.idl.CreateTableRequest)) {
      return super.equals(obj);
    }
    com.pancakedb.idl.CreateTableRequest other = (com.pancakedb.idl.CreateTableRequest) obj;

    if (!getTableName()
        .equals(other.getTableName())) return false;
    if (hasSchema() != other.hasSchema()) return false;
    if (hasSchema()) {
      if (!getSchema()
          .equals(other.getSchema())) return false;
    }
    if (mode_ != other.mode_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getTableName().hashCode();
    if (hasSchema()) {
      hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getSchema().hashCode();
    }
    hash = (37 * hash) + MODE_FIELD_NUMBER;
    hash = (53 * hash) + mode_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pancakedb.idl.CreateTableRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.pancakedb.idl.CreateTableRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.pancakedb.idl.CreateTableRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.pancakedb.idl.CreateTableRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code protos.ddl.CreateTableRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protos.ddl.CreateTableRequest)
      com.pancakedb.idl.CreateTableRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancakedb.idl.Ddl.internal_static_protos_ddl_CreateTableRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancakedb.idl.Ddl.internal_static_protos_ddl_CreateTableRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancakedb.idl.CreateTableRequest.class, com.pancakedb.idl.CreateTableRequest.Builder.class);
    }

    // Construct using com.pancakedb.idl.CreateTableRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      tableName_ = "";

      if (schemaBuilder_ == null) {
        schema_ = null;
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }
      mode_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.pancakedb.idl.Ddl.internal_static_protos_ddl_CreateTableRequest_descriptor;
    }

    @java.lang.Override
    public com.pancakedb.idl.CreateTableRequest getDefaultInstanceForType() {
      return com.pancakedb.idl.CreateTableRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.pancakedb.idl.CreateTableRequest build() {
      com.pancakedb.idl.CreateTableRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.pancakedb.idl.CreateTableRequest buildPartial() {
      com.pancakedb.idl.CreateTableRequest result = new com.pancakedb.idl.CreateTableRequest(this);
      result.tableName_ = tableName_;
      if (schemaBuilder_ == null) {
        result.schema_ = schema_;
      } else {
        result.schema_ = schemaBuilder_.build();
      }
      result.mode_ = mode_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.pancakedb.idl.CreateTableRequest) {
        return mergeFrom((com.pancakedb.idl.CreateTableRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.pancakedb.idl.CreateTableRequest other) {
      if (other == com.pancakedb.idl.CreateTableRequest.getDefaultInstance()) return this;
      if (!other.getTableName().isEmpty()) {
        tableName_ = other.tableName_;
        onChanged();
      }
      if (other.hasSchema()) {
        mergeSchema(other.getSchema());
      }
      if (other.mode_ != 0) {
        setModeValue(other.getModeValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.pancakedb.idl.CreateTableRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.pancakedb.idl.CreateTableRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object tableName_ = "";
    /**
     * <code>string table_name = 1;</code>
     * @return The tableName.
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tableName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     * @return The bytes for tableName.
     */
    public com.google.protobuf.ByteString
        getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string table_name = 1;</code>
     * @param value The tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tableName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string table_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTableName() {
      
      tableName_ = getDefaultInstance().getTableName();
      onChanged();
      return this;
    }
    /**
     * <code>string table_name = 1;</code>
     * @param value The bytes for tableName to set.
     * @return This builder for chaining.
     */
    public Builder setTableNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tableName_ = value;
      onChanged();
      return this;
    }

    private com.pancakedb.idl.Schema schema_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.pancakedb.idl.Schema, com.pancakedb.idl.Schema.Builder, com.pancakedb.idl.SchemaOrBuilder> schemaBuilder_;
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     * @return Whether the schema field is set.
     */
    public boolean hasSchema() {
      return schemaBuilder_ != null || schema_ != null;
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     * @return The schema.
     */
    public com.pancakedb.idl.Schema getSchema() {
      if (schemaBuilder_ == null) {
        return schema_ == null ? com.pancakedb.idl.Schema.getDefaultInstance() : schema_;
      } else {
        return schemaBuilder_.getMessage();
      }
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    public Builder setSchema(com.pancakedb.idl.Schema value) {
      if (schemaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        schema_ = value;
        onChanged();
      } else {
        schemaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    public Builder setSchema(
        com.pancakedb.idl.Schema.Builder builderForValue) {
      if (schemaBuilder_ == null) {
        schema_ = builderForValue.build();
        onChanged();
      } else {
        schemaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    public Builder mergeSchema(com.pancakedb.idl.Schema value) {
      if (schemaBuilder_ == null) {
        if (schema_ != null) {
          schema_ =
            com.pancakedb.idl.Schema.newBuilder(schema_).mergeFrom(value).buildPartial();
        } else {
          schema_ = value;
        }
        onChanged();
      } else {
        schemaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    public Builder clearSchema() {
      if (schemaBuilder_ == null) {
        schema_ = null;
        onChanged();
      } else {
        schema_ = null;
        schemaBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    public com.pancakedb.idl.Schema.Builder getSchemaBuilder() {
      
      onChanged();
      return getSchemaFieldBuilder().getBuilder();
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    public com.pancakedb.idl.SchemaOrBuilder getSchemaOrBuilder() {
      if (schemaBuilder_ != null) {
        return schemaBuilder_.getMessageOrBuilder();
      } else {
        return schema_ == null ?
            com.pancakedb.idl.Schema.getDefaultInstance() : schema_;
      }
    }
    /**
     * <code>.protos.schema.Schema schema = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.pancakedb.idl.Schema, com.pancakedb.idl.Schema.Builder, com.pancakedb.idl.SchemaOrBuilder> 
        getSchemaFieldBuilder() {
      if (schemaBuilder_ == null) {
        schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.pancakedb.idl.Schema, com.pancakedb.idl.Schema.Builder, com.pancakedb.idl.SchemaOrBuilder>(
                getSchema(),
                getParentForChildren(),
                isClean());
        schema_ = null;
      }
      return schemaBuilder_;
    }

    private int mode_ = 0;
    /**
     * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
     * @return The enum numeric value on the wire for mode.
     */
    @java.lang.Override public int getModeValue() {
      return mode_;
    }
    /**
     * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
     * @param value The enum numeric value on the wire for mode to set.
     * @return This builder for chaining.
     */
    public Builder setModeValue(int value) {
      
      mode_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
     * @return The mode.
     */
    @java.lang.Override
    public com.pancakedb.idl.CreateTableRequest.SchemaMode getMode() {
      @SuppressWarnings("deprecation")
      com.pancakedb.idl.CreateTableRequest.SchemaMode result = com.pancakedb.idl.CreateTableRequest.SchemaMode.valueOf(mode_);
      return result == null ? com.pancakedb.idl.CreateTableRequest.SchemaMode.UNRECOGNIZED : result;
    }
    /**
     * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
     * @param value The mode to set.
     * @return This builder for chaining.
     */
    public Builder setMode(com.pancakedb.idl.CreateTableRequest.SchemaMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      mode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.protos.ddl.CreateTableRequest.SchemaMode mode = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMode() {
      
      mode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:protos.ddl.CreateTableRequest)
  }

  // @@protoc_insertion_point(class_scope:protos.ddl.CreateTableRequest)
  private static final com.pancakedb.idl.CreateTableRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.pancakedb.idl.CreateTableRequest();
  }

  public static com.pancakedb.idl.CreateTableRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateTableRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreateTableRequest>() {
    @java.lang.Override
    public CreateTableRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CreateTableRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CreateTableRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreateTableRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.pancakedb.idl.CreateTableRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

